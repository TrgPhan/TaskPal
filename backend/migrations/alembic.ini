# TaskPal Database Migration Configuration

[alembic]
# template used to generate migration files
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
revision_environment = false

# path to migration scripts
script_location = migrations

# template used to generate migration file names
# The available placeholders are:
# %%(rev)s - revision id
# %%(slug)s - revision slug
# %%(year)d - year
# %%(month).2d - month (zero padded)
# %%(day).2d - day (zero padded)
# %%(hour).2d - hour (zero padded)
# %%(minute).2d - minute (zero padded)

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed by adding `alembic[tz]` to the pip requirements
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
# timezone =

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version number format
version_num_format = %04d

# version path separator; As mentioned above, this is the character used to split
# version_locations. The default within new alembic.ini files is "os", which uses
# os.pathsep. If this key is omitted entirely, it falls back to the legacy
# behavior of splitting on spaces and/or commas.
# Valid values for version_path_separator are:
#
# version_path_separator = :
# version_path_separator = ;
# version_path_separator = space
version_path_separator = os

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

# Database URL - will be overridden by Flask-Migrate
# Default PostgreSQL URL (will be overridden by Flask app config)
sqlalchemy.url = postgresql://taskpal_user:taskpal_password@localhost:5432/taskpal_db


# Logging configuration for TaskPal migrations
[loggers]
keys = root,sqlalchemy,alembic,flask_migrate

[handlers]
keys = console,file

[formatters]
keys = generic,detailed

[logger_root]
level = INFO
handlers = console,file
qualname =

[logger_sqlalchemy]
level = WARN
handlers = file
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers = console,file
qualname = alembic

[logger_flask_migrate]
level = INFO
handlers = console,file
qualname = flask_migrate

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = INFO
formatter = generic

[handler_file]
class = FileHandler
args = ('migrations/migration.log',)
level = DEBUG
formatter = detailed

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S

[formatter_detailed]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)d] %(message)s
datefmt = %Y-%m-%d %H:%M:%S
